<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Pencroff</title><link>https://pencroff.com/tags/golang/</link><description>Recent content in Golang on Pencroff</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://pencroff.com/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Fluky - random number generator library</title><link>https://pencroff.com/post/fluky-lib/</link><pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate><guid>https://pencroff.com/post/fluky-lib/</guid><description>&lt;p>I was always curious about Random Number Generator (RNG) implementation. The magic how from few numbers inside it generates long sequence &amp;ldquo;randomly&amp;rdquo; distributed numbers. I did few experiments on my ZX Spectrum with it limited performance. And this article I would like to share the &lt;a href="//github.com/Pencroff/fluky">fluky&lt;/a> library.&lt;/p></description></item><item><title>Proj 2048</title><link>https://pencroff.com/post/proj-2048/</link><pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate><guid>https://pencroff.com/post/proj-2048/</guid><description>&lt;p>A few years ago Gabriele Cirulli developed a sliding puzzle where the goal is to grow tiles and get up to 2048. My
“Proj 2048” is about implementing several agents to play. Which should get tiles up to 4096 or maybe even 64536 (if
it’s possible of course) 😉.&lt;/p></description></item></channel></rss>