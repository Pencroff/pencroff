<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Pencroff</title><link>https://pencroff.com/post/</link><description>Recent content in Posts on Pencroff</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 25 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://pencroff.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Unveiling the Power of CCID in Go: A Comprehensive Guide</title><link>https://pencroff.com/post/ccid-go/</link><pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate><guid>https://pencroff.com/post/ccid-go/</guid><description>&lt;p>Have you ever struggled with generating unique and meaningful IDs in your Go applications?
Look no further! In this blog post, we&amp;rsquo;ll explore the Go implementation of &lt;a href="https://github.com/Pencroff/ccid">CCID concept&lt;/a>,
bringing you a feature-rich, efficient, and easy-to-use ID generator.&lt;/p></description></item><item><title>Pigeon-Posting in the Digital Age</title><link>https://pencroff.com/post/pigeon-data-box/</link><pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate><guid>https://pencroff.com/post/pigeon-data-box/</guid><description>&lt;p>During my recent passing of the Pluralsight course on cloud technologies, I came across an intriguing fact that piqued my interest: although it may be hard to believe, pigeon-posting – the ancient method of delivering messages by releasing homing pigeons – still exists in some form in today&amp;rsquo;s digital age.&lt;/p></description></item><item><title>The Art of Generating IDs</title><link>https://pencroff.com/post/the-art-of-generating-ids/</link><pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate><guid>https://pencroff.com/post/the-art-of-generating-ids/</guid><description>&lt;p>Unique identifiers (IDs) are critical elements in many applications and systems.
They provide a way to distinguish between different entities and ensure data accuracy and consistency.
However, generating unique IDs can be challenging due to several factors such as data complexity, scalability,
and security concerns. In this article, we will explore the specific challenges that arise during the process
of generating unique IDs and how they can be addressed.&lt;/p></description></item><item><title>Fluky - random number generator library</title><link>https://pencroff.com/post/fluky-lib/</link><pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate><guid>https://pencroff.com/post/fluky-lib/</guid><description>&lt;p>I was always curious about Random Number Generator (RNG) implementation. The magic how from few numbers inside it generates long sequence &amp;ldquo;randomly&amp;rdquo; distributed numbers. I did few experiments on my ZX Spectrum with it limited performance. And this article I would like to share the &lt;a href="//github.com/Pencroff/fluky">fluky&lt;/a> library.&lt;/p></description></item><item><title>Proj 2048</title><link>https://pencroff.com/post/proj-2048/</link><pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate><guid>https://pencroff.com/post/proj-2048/</guid><description>&lt;p>A few years ago Gabriele Cirulli developed a sliding puzzle where the goal is to grow tiles and get up to 2048. My
“Proj 2048” is about implementing several agents to play. Which should get tiles up to 4096 or maybe even 64536 (if
it’s possible of course) 😉.&lt;/p></description></item><item><title>First post</title><link>https://pencroff.com/post/first-post/</link><pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate><guid>https://pencroff.com/post/first-post/</guid><description>&lt;p>Hi. My name is Sergii. Recently I decided to create a blog and note interesting things.&lt;/p>
&lt;p>Here you go - my very first post.&lt;/p>
&lt;p>As an engineer, I currently like to play with Golang, Python, and JavaScript or TypeScript (I started with JS way before it started to be so popular).&lt;/p></description></item></channel></rss>